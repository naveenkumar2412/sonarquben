name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarQube:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Set up JDK (assuming you're using Java)
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'  # You can also use 'zulu' or other supported distributions
          java-version: '11'

      # Cache SonarQube scanner dependencies
      - name: Cache SonarQube dependencies
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('/*.java') }}
          restore-keys: |
            ${{ runner.os }}-sonar-

      # SonarQube Scan
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-l
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run your build and tests
        run: |
          # Replace with your build command (e.g., mvn clean install, npm run build, etc.)
          echo "Running build..."
          
     # Install SonarQube Scanner manually
      - name: Install SonarQube Scanner
        run: |
          # Download and install SonarQube Scanner
          wget https://binaries.sonarsource.com/Commercial/sonar-scanner-cli/sonar-scanner-4.6.2.2472-linux.zip
          unzip sonar-scanner-4.6.2.2472-linux.zip -d $HOME
          export PATH=$HOME/sonar-scanner-4.6.2.2472-linux/bin:$PATH

      # Run SonarQube scan
      - name: Run SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my-sonarqube \
            -Dsonar.projectName="sonarqube" \
            -Dsonar.projectVersion=1.0 \
            -Dsonar.sources=src \
            -Dsonar.host.url=http://65.0.117.200:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
